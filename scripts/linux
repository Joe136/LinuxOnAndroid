#!/system/bin/sh
#sdcard="$(readlink -f /sdcard)"
system="$(basename $0)"
mnt="$ANDROID_DATA/local/$system"
imgtype="ext2"
shell="/bin/bash"
ramdisk="/mnt/ramdisk"

export xbin="$ANDROID_ROOT/xbin"
export PATH="$xbin:/bin:/sbin:/usr/bin:/usr/sbin:/usr/local/bin:/usr/local/sbin:$PATH"
export TERM="xterm-color"
export HOME="/root"

home="$ANDROID_DATA/local"

if [ -z "$SECONDARY_STORAGE" ]; then
  sdcard="$EXTERNAL_STORAGE"
else
  intern="$EXTERNAL_STORAGE"
  sdcard="$SECONDARY_STORAGE"
fi

currentscriptpath()
{
  local fullpath=`echo "$(readlink -f $0)"`
  local fullpath_length=`echo ${#fullpath}`
  local scriptname="$(basename "$fullpath")"
  local scriptname_length=`echo ${#scriptname}`
  local result_length=`echo $((fullpath_length - $scriptname_length - 1))`
  local result=`echo "$fullpath" | head -c $result_length`
  echo "$result"
}

getloopno()
{
for i in $(seq 250 -1 0); do
  if [ ! -e "/dev/block/loop$i" ]; then
    echo $i
    return
  fi
done
}

kit="$(currentscriptpath)"
img="$kit/$system.img"


#Froyo's apps-to-SD makes use of special loopback devices /dev/block/dm-#
#Each program installed to SD uses up a normal loopback device.
#We therefore have to make our own with a minor number that we hope
#users will never reach.
#Our mount will break if there are $loopno apps installed to SD

if [ "$1" != "install" ]; then
  if [ -e "$home/linuxonandroid/config.default" ]; then
    . "$home/linuxonandroid/config.default"
  fi
  if [ -e "$home/linuxonandroid/config.$system" ]; then
    . "$home/linuxonandroid/config.$system"
  fi
fi

case "$1" in
mount)
  if [ ! -e "$home/linuxonandroid/config.$system" ]; then
    "$0" install "$system"
    . "$home/linuxonandroid/config.$system"
  fi

  if mount | grep -q " $mnt "; then
    echo "$img already mounted"
    if [ "$2" = "android" ] && $(mount | ! grep -q " $mnt/mnt/data "); then
      echo "Mounting: System Parts ..."
      mount -o bind $ANDROID_DATA "$mnt/mnt/data"
      mount -o bind $ANDROID_ROOT "$mnt/mnt/system"
      #if [ -d "/sbin" ]; then
      #  mount -o bind /sbin "$mnt/mnt/sbin"
      #fi
    fi
    exit 2
  fi

  echo "Mounting: Prepwork ..."
  #some ROMS mount the sdcard nodev
  mount -o dev,remount "$sdcard"
  #some also don't load filesystem drivers on boot
  grep -q ext2 /proc/filesystems || modprobe ext2

  if [ ! -z "$imgoptions" ]; then
    imgoptions="-o $imgoptions"
  fi

  if [ "$native" == "true" ]; then
    mount -t "$imgtype" $imgoptions "$partition" "$mnt"
  else
    echo "Mounting: Loopback mount ..."
    if [ ! -d "$mnt" ]; then
      mkdir "$mnt"
    fi

    loopno=$(getloopno)
    loop="/dev/block/loop$loopno"
    if [ "$loopno" == "" ]; then
      echo "could not mount image, no free loop-devices found"
      exit 6
    fi
    #if [ -e "$loop" ]; then
    #  echo "Remove Loopback Device"
    #  losetup -d "$loop"
    #  rm "$loop"
    #fi
    #create loop device
    mknod "$loop" b 7 "$loopno"
    losetup "$loop" "$img"
    mount -t "$imgtype" $imgoptions "$loop" "$mnt"
    touch "$img"
  fi

  echo "Mounting: Setting up chroot environment ..."
  mount -o bind /dev "$mnt/dev"
  mount -t devpts devpts "$mnt/dev/pts"
  mount -o bind /proc "$mnt/proc"
  mount -o bind /sys "$mnt/sys"

  #make the SD card accessible to the chroot environment
  mkdir -p "$mnt/mnt/sdcard"
  #mount -o bind $sdcard "$mnt/media/sdcard"
  mountpoint=$(df -P | awk '$6=="'$sdcard'" {print $1}')
  mount -t vfat -o rw,dirsync,suid,exec,relatime "$mountpoint" "$mnt/mnt/sdcard"

  if [ "$2" = "android" ]; then
    echo "Mounting: System Parts ..."
    mount -o bind $ANDROID_DATA "$mnt/mnt/data"
    mount -o bind $ANDROID_ROOT "$mnt/mnt/system"
    #if [ -d "/sbin" ]; then
    #  mount -o bind /sbin "$mnt/mnt/sbin"
    #fi
  fi

  echo "	[ Done ]"

;;
umount|unmount)
  echo "Kill running processes"

  fuser -km "$mnt"
  echo "Unmounting ..."
  #awk '{print $2}' /proc/mounts | grep "^$mnt" | sort -r | xargs umount
  cut -sd' ' -f2 /proc/mounts | grep "^$mnt" | sort -r | xargs umount
  #umount "$mnt/mnt/sdcard"
  #umount "$mnt/sys"
  #umount "$mnt/proc"
  #umount "$mnt/dev/pts"
  #umount "$mnt/dev"
  #umount "$mnt"

  if [ -e "$loop" ]; then
    echo "Unmounting: Loopback mount ..."
    losetup -d "$loop"
    rm "$loop"
  fi

;;
mountsd)
  if mount | ! grep -q " $mnt "; then
    echo "$img not mounted"
    exit 3
  fi

  if mount | grep -q " $mnt/mnt/sdcard "; then
    echo "$mnt/mnt/sdcard already mounted"
    exit 4
  fi

  #make the SD card accessible to the chroot environment
  if [ ! -d "$mnt/mnt/sdcard" ]; then
    mkdir "$mnt/mnt/sdcard"
  fi

  #mount -o bind "$sdcard" "$mnt/media/sdcard"
  mountpoint=$(df -P | awk '$6=="'$sdcard'" {print $1}')
  mount -t vfat -o rw,dirsync,suid,exec,relatime "$mountpoint" "$mnt/mnt/sdcard"

;;
umountsd|unmountsd)
  echo "Kill running processes"
  fuser -km "$mnt/mnt/sdcard"
  echo "Unmounting ..."
  umount -f "$mnt/mnt/sdcard"

;;
mountimg)
  beg=250
  unset IFS
  conffiles=default'
'"$system"
  for mountconf in $conffiles; do
    if [ -e "/data/local/linuxonandroid/mount.$mountconf" ]; then
      for line in $(cat "/data/local/linuxonandroid/mount.$mountconf" | awk '{print $0}'); do
        IFS=":"
        image="$(echo $line | awk '{ print $1 }')"
        target="$mnt/$(echo $line | awk '{ print $2 }')"
        options="$(echo $line | awk '{ print $3 }')"
        type="$(echo $line | awk '{ print $4 }')"
        unset IFS
        if [ ! -z "$options" ]; then options="-o $options"; else unset options; fi
        if [ -z "$type" ]; then type="ext2"; fi

        if [ "$image" != "" ] && [ "$target" != "" ]; then
          if mountpoint -q "$target" || [ ! -e "$image" ]; then
            continue;
          fi
          for i in $(seq $beg -1 0); do
            if [ ! -e "/dev/block/loop$i" ]; then
              loopno=$i
              beg=$((i-1))
              break
            fi
          done
          echo mount -t "$type" $options "$image" "$target"
          loop="/dev/block/loop$loopno"
          #create loop device
          mknod "$loop" b 7 "$loopno"
          losetup "$loop" "$image"
          mkdir -p "$target"
          mount -t "$type" $options "$loop" "$target"
        fi
      done
    fi
  done

;;
umountimg|unmountimg)
#  echo "Kill running processes"
#  fuser -km "$mnt/mnt/sdcard"
#  echo "Unmounting ..."
#  umount -f "$mnt/mnt/sdcard"

;;
mountram)
  if mount | ! grep -q " $mnt "; then
    echo "$img not mounted"
    exit 5
  fi

  mount -t ramfs ramfs "$mnt/$ramdisk"

;;
umountram)
#  echo "Kill running processes"
#  fuser -km "$mnt/$ramdisk"
  echo "Unmounting ..."
  umount -f "$mnt/$ramdisk"

;;
chroot|"")
  "$0" mount
  chroot "$mnt" $shell

;;
ssh)
  "$0" mount
  chroot "$mnt" /root/scripts/ssh.sh $2

;;
vnc)
  "$0" mount
  chroot "$mnt" /root/scripts/vnc.sh $2 $3

;;
install)
  if [ "$2" != "" ]; then
    system="$2"
  fi
  if [ ! -z "$3" ] && [ "$3" != "--force" ]; then
    img="$3"
  fi
  if [ "$3" == "--noimage" ]; then
    unset img
  fi

  if [ ! -e "$home/linuxonandroid/config.$system" ] || [ "$3" = "--force" ] || [ "$4" = "--force" ]; then
    echo "Creating config files ..."
    mkdir -p /data/local/linuxonandroid
    echo "kit=\"$kit\"" >> "/data/local/linuxonandroid/config.$system"
    echo "img=\"$img\"" >> "/data/local/linuxonandroid/config.$system"
    echo "mnt=\"$ANDROID_DATA/local/$system\"" >> "/data/local/linuxonandroid/config.$system"
    echo "#native=\"false\"" >> "/data/local/linuxonandroid/config.$system"
    echo "#partition=\"\"" >> "/data/local/linuxonandroid/config.$system"
    echo "#imgtype=\"ext2\"" >> "/data/local/linuxonandroid/config.$system"
    echo "#imgoptions=\"\"" >> "/data/local/linuxonandroid/config.$system"
    echo "#ramdisk=\"/mnt/ramdisk\"" >> "/data/local/linuxonandroid/config.$system"
    echo "#mountdefault=\"sdcard,intern,images,images:default,images:system,images::wireshark,ram\"" >> "/data/local/linuxonandroid/config.$system"
    echo "#shell=\"/bin/bash\"" >> "/data/local/linuxonandroid/config.$system"
    echo "export TERM=\"$TERM\"" >> "/data/local/linuxonandroid/config.$system"
    echo "loopno=\"254\"" >> "/data/local/linuxonandroid/config.$system"
  fi

;;
passwd)
  "$0" mount
  chroot "$mnt" /usr/bin/passwd $2

;;
hardinstall)

;;
help)
  case "$2" in
    "")

    ;;
    mount)
      echo "Mount the Image and system-parts."
    ;;
    mountsd)
      echo "Make the SD card accessible to the chroot environment."
    ;;
    *)
      echo "Command unknown"
    ;;
  esac

;;
*)
  echo "Usage: $(basename $0) [help|[u[n]]mount[sd|img]|chroot|ssh|vnc|install|passwd|hardinstall]"
  exit 1

;;
esac
